apiVersion: apps/v1
kind: Deployment
metadata:
  name: zoneminder
  namespace: zm-test
  labels:
    app: zm
spec:
  selector:
    matchLabels:
      app: zm
  replicas: 1
  strategy:
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: zm
    spec:
      hostNetwork: true
      volumes:
        - name: zm-pvc
          persistentVolumeClaim:
            claimName: zm-pvc
        - name: cache-volume
          emptyDir:
            medium: Memory
      containers:
        - name: zoneminder
          image: dlandon/zoneminder
          ports:
            - name: zm-port
              containerPort: 9000
            - name: https
              containerPort: 8443
              protocol: TCP
          env:
            - name: TZ
              value: America/Chicago
            - name: PUID
              value: "99"
            - name: PGID
              value: "100"
            - name: INSTALL_HOOK
              value: "0"
            - name: INSTALL_FACE
              value: "0"
            - name: NSTALL_TINY_YOLOV3
              value: "0"
            - name: PGID
              value: "100"
            - name: INSTALL_YOLOV3
              value: "0"
            - name: INSTALL_YOLOV4
              value: "0"
            - name: MULTI_PORT_START
              value: "0"
            - name: MULTI_PORT_END
              value: "0"
          volumeMounts:
            - name: cache-volume
              mountPath: /dev/shm
              subPath: ""
            - name: zm-pvc
              mountPath: /config
              subPath: ""
            - name: zm-pvc
              mountPath: /var/cache/zoneminder
              subPath: ""
          resources:
            requests:
              memory: 4Gi
              cpu: "1"
            limits:
              memory: 8Gi
              cpu: "2"
---
apiVersion: v1
kind: Service
metadata:
  name: zm-test-service
  namespace: zm-test
spec:
  selector:
    app: appname
  type: ClusterIP
  ports:
    - name: http
      port: 8443
      targetPort: 8443
      protocol: TCP # optional protocol
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: zm
  namespace: zm-test
  annotations:
    # (Optional): Annotations for the Ingress Controller
    # ---
    # General:
    # kubernetes.io/ingress.class: traefik
    #
    # TLS configuration:
    # traefik.ingress.kubernetes.io/router.entrypoints: web, websecure
    # traefik.ingress.kubernetes.io/router.tls: "true"
    #
    # Middleware:
    # traefik.ingress.kubernetes.io/router.middlewares:your-middleware@kubernetescrd
spec:
  rules:
    - host: "zm-test.roonaldo.org" # Your hostname
      http:
        paths:
          # Path-based routing settings:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: zm-test-service # The name of the service
                port:
                  number: 80 # Service Portnumber
  # tls:
  # - hosts:
  #   - your-hostname.com  # Your hostname
  #   secretName: your-secret  # Your TLS Secret
