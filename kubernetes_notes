#192.168.200.85 kgui.sandstorm.iot kgui

192.168.200.95 kmaster.sandstorm.iot kmaster
192.168.200.105 kworker.sandstorm.iot kworker
192.168.200.115 kworker2.sandstorm.iot kworker2

#instructions found @ https://computingforgeeks.com/install-kubernetes-on-ubuntu-using-k3s/

sudo apt update
sudo apt -y upgrade && sudo systemctl reboot

sudo apt update
sudo apt install apt-transport-https ca-certificates curl software-properties-common -y
curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo apt-key add -
sudo add-apt-repository "deb [arch=amd64] https://download.docker.com/linux/ubuntu focal stable"

sudo apt update
sudo apt install docker-ce -y

sudo systemctl start docker
sudo systemctl enable docker

#Add your user to Docker group to avoid typing sudo everytime you run docker commands.:
sudo usermod -aG docker noorbutt
newgrp docker

curl -sfL https://get.k3s.io | sh -s - --docker

sudo ufw allow 6443/tcp
sudo ufw allow 443/tcp

curl -sfL http://get.k3s.io | K3S_URL=https://192.168.200.95:6443 K3S_TOKEN="K1056df558e79b7a202427ff1901c4234ee103d74f430110edd9a738a123c37e5bc::server:b4a546d04884855673d7d85b4bd9be68" sh -

curl -sfL https://get.k3s.io | INSTALL_K3S_CHANNEL=latest sh -

curl -sfL https://get.k3s.io | INSTALL_K3S_EXEC="--tls-san 192.168.200.95 --node-external-ip 192.168.200.95" K3S_NODE_NAME="$HOSTNAME" K3S_KUBECONFIG_MODE="644" sh -

curl -sfL https://get.k3s.io | K3S_URL=https://servername:6443 K3S_TOKEN=nodetoken sh -

helm upgrade rancher rancher-stabe/rancher \
 --namespace cattle-system \
 --set hostname=kmaster.sandstorm.iot

helm install rancher rancher-stable/rancher \
--namespace cattle-system \
--set hostname=kmaster.sandstorm.iot

helm install rancher rancher-stable/rancher \
 --namespace cattle-system \
 --set hostname=kmaster.sandstorm.iot \
 --set bootstrapPassword=admin

The ingress-nginx controller has been installed.
It may take a few minutes for the LoadBalancer IP to be available.
You can watch the status by running 'kubectl --namespace default get services -o wide -w nginx-ingress-ingress-nginx-controller'

An example Ingress that makes use of the controller:
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
name: example
namespace: foo
spec:
ingressClassName: nginx
rules: - host: www.example.com
http:
paths: - pathType: Prefix
backend:
service:
name: exampleService
port:
number: 80
path: / # This section is only required if TLS is to be enabled for the Ingress
tls: - hosts: - www.example.com
secretName: example-tls

If TLS is enabled for the Ingress, a Secret containing the certificate and key must also be provided:

apiVersion: v1
kind: Secret
metadata:
name: example-tls
namespace: foo
data:
tls.crt: <base64 encoded cert>
tls.key: <base64 encoded key>
type: kubernetes.io/tls

curl https://releases.rancher.com/install-docker/20.10.sh | sh

I had this issue on Ubuntu 22.04 i fixed it by editing /etc/default/grub file. Added these values into GRUB_CMDLINE_LINUX:

GRUB_CMDLINE_LINUX="cgroup_memory=1 cgroup_enable=memory swapaccount=1 systemd.unified_cgroup_hierarchy=0"

then did:

sudo update-grub
sudo reboot

This resolved my problem but i spent entire day on it. Maybe it helps someone else as well. I think the same thing works for Debian 11.
